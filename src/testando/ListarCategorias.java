/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testando;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.Registry;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;

public class ListarCategorias extends javax.swing.JFrame {

    Object[][] data;
    String[] columnNames = new String[4];
    Interface stub;
    Registry registry;

    /**
     * Creates new form List
     */
    public ListarCategorias(Registry reg) throws RemoteException, NotBoundException {
        initComponents();
        registry = reg;
        stub = (Interface) registry.lookup("Hello");
        data = stub.ListarCategorias();
        preencheCampo();
    }

    private void preencheCampo() {
        //Função para listagem e organização das informações
        this.columnNames[0] = "IdCategoria";
        this.columnNames[1] = "Nome";
        this.columnNames[2] = "Editar";
        this.columnNames[3] = "Remover";

        //Organiza as colunas nome e idcurso
        tbRegistros.setModel(new javax.swing.table.DefaultTableModel(
                data, columnNames) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        //Organiza as colunas editar e remover
        tbRegistros.getColumnModel().getColumn(2).setCellRenderer(new ButtonRenderer("Editar")); //criação de botão editar
        tbRegistros.getColumnModel().getColumn(3).setCellRenderer(new ButtonRenderer("Remover")); //criação de botão remover

        //Configura o click do mouse
        tbRegistros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                try {
                    buttonClicked(evt);
                } catch (RemoteException ex) {
                    Logger.getLogger(ListarCategorias.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NotBoundException ex) {
                    Logger.getLogger(ListarCategorias.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        spListagem = new JScrollPane(tbRegistros);
        tbRegistros = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("LISTAR");

        tbRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        spListagem.setViewportView(tbRegistros);

        jButton2.setText("Produtos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1))
                    .addComponent(spListagem, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spListagem, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Troca a visualização de cursos para disciplinas
        this.dispose();
        ListarProdutos l = null;
        try {
            l = new ListarProdutos(registry);
        } catch (RemoteException ex) {
            Logger.getLogger(ListarCategorias.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(ListarCategorias.class.getName()).log(Level.SEVERE, null, ex);
        }
        l.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        InserirCategorias i = null;
        try {
            i = new InserirCategorias(registry);
        } catch (RemoteException ex) {
            Logger.getLogger(ListarCategorias.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NotBoundException ex) {
            Logger.getLogger(ListarCategorias.class.getName()).log(Level.SEVERE, null, ex);
        }
        i.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    private void buttonClicked(java.awt.event.MouseEvent evt) throws RemoteException, NotBoundException, NotBoundException {
        // função que coleta o click na tela
        //e faz a ação desejada

        int colunaClicada = tbRegistros.getColumnModel().getColumnIndexAtX(evt.getX());
        int linhaClicada = evt.getY() / tbRegistros.getRowHeight();
        //é pego o id do curso através da linha clicada
        int idEmQuestao = (int) tbRegistros.getModel().getValueAt(linhaClicada, 0);

        if (colunaClicada == 2) { //Edita um registro, chamando uma nova interface
            EditarCategorias e = new EditarCategorias(registry, idEmQuestao);
            this.setVisible(false);
            e.setVisible(true);

        } else if (colunaClicada == 3) {
            // Exclui um registro
            if (stub.ExcluirCategorias(idEmQuestao)) {
                JOptionPane.showMessageDialog(null, "Registro deletado com sucesso!!!", "RESULTADO:", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Não foi possível deletar registro!!!", "RESULTADO:", JOptionPane.ERROR_MESSAGE);

            }
            this.setVisible(false);
            ListarCategorias l = new ListarCategorias(registry);
            l.setVisible(true);
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane spListagem;
    private javax.swing.JTable tbRegistros;
    // End of variables declaration//GEN-END:variables

    class ButtonRenderer extends JButton implements TableCellRenderer { //função padrão de rendenizar 

        private String text;

        public ButtonRenderer(String text) {
            this.text = text;
            this.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    JOptionPane.showMessageDialog(null, "opa");
                }
            });
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            setText(this.text);
            return this;
        }

    }
}
